'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _effect = require('./effect');

var _effect2 = _interopRequireDefault(_effect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-unused-vars:0*/


/**
 * <AnimationSequence/> is a grouping element that uses the SequenceEffect class provided by the Web Animations API polyfill.
 * Any <Animatable/> elements in a <AnimationSequence/> will be run in serial, and <AnimationSequence/> will provide a single
 * timeline for the SequenceEffect.
 */
var AnimationSequence = function (_Effect) {
  _inherits(AnimationSequence, _Effect);

  function AnimationSequence() {
    _classCallCheck(this, AnimationSequence);

    return _possibleConstructorReturn(this, (AnimationSequence.__proto__ || Object.getPrototypeOf(AnimationSequence)).call(this, 'SequenceEffect'));
  }

  return AnimationSequence;
}(_effect2.default);

exports.default = AnimationSequence;